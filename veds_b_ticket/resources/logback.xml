<?xml version="1.0" encoding="UTF-8"?>
<!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 
     scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 
     debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 
     log.trace("======trace"); 
	log.debug("======debug"); 
	log.info("======info"); 
	log.warn("======warn"); 
	log.error("======error"); 
	error是最高级别，当设置为error时只能打印error信息 当设置为warn级别时只能打印warn和error信息 当设置为info级别时只能打印info，warn和error信息 当设置为debug级别时，一次类推即可 -->
<configuration scanPeriod="10" scan="true">
	<jmxConfigurator />
	<property name="logDir" value="${catalina.base}/" />

	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- 日志文件的大小 -->
	<property name="maxFileSize" value="100MB" />
	<appender name="dataLogFile" class="ch.qos.logback.classic.sift.SiftingAppender">
		<discriminator>
			<Key>filename</Key>
			<DefaultValue>unknown</DefaultValue>
		</discriminator>
		<sift>
			<appender name="dataLogFile_inner" class="ch.qos.logback.core.rolling.RollingFileAppender">
				<file>${logDir}logs/${filename}.log</file>
				<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
					<fileNamePattern>${logDir}logs/${filename}-%d{yyyy-MM-dd}_%i.log</fileNamePattern>
					<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
						<maxFileSize>${maxFileSize}</maxFileSize>
					</timeBasedFileNamingAndTriggeringPolicy>
				</rollingPolicy>
				<layout>
					<pattern>%date{MM-dd HH:mm:ss.SSS} [%thread] %level %logger{35} - %msg%n</pattern>
				</layout>
			</appender>
		</sift>
	</appender>
	
	<!-- project default level -->
	<logger name="cn.vetech" />

	<logger name="ch.qos" />

	<!-- business log 使用独立的appender，不继承Root的appender -->
	<logger name="dataLog" level="ERROR" additivity="false">
		<appender-ref ref="dataLogFile" />
		<appender-ref ref="console" />
	</logger>
	<!--log4jdbc -->
	<logger name="jdbc.sqltiming" level="debug" />

	<!-- springside modules -->
	<logger name="org.springside.modules" level="ERROR" />

	<!-- spring日志 -->
	<logger name="org.springframework" level="ERROR" />

	<!-- hibernate日志 -->
	<logger name="org.hibernate" level="ERROR" />
	<!-- mybiatis日志 -->
	<logger name="org.mybatis" level="ERROR" />



	<!-- cxf inbound/outbound logger -->
	<logger name="org.apache.cxf.services" level="ERROR" />
	<!--APACHE日志 -->
	<logger name="org.apache" level="ERROR" />

	<!--ehcache日志 -->
	<logger name="net.sf.ehcache" level="ERROR" />
	<!-- root -->
	<root level="debug">
		<appender-ref ref="console" />
	</root>
</configuration>